# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: 2025-Present Defense Unicorns

name: Go

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
    types: [milestoned, opened, edited, synchronize]

permissions:
  contents: read
  pull-requests: read

concurrency:
  group: go-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ci:
    name: build & test
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: go.mod
          cache-dependency-path: go.sum
      - run: make clean && make -j all
      - run: |
          if ! git diff --exit-code maru2.schema.json; then
            echo "maru2.schema.json is dirty. Please run 'make' and commit the changes"
            exit 1
          fi
          if ! git diff --exit-code schema/v0/schema.json; then
            echo "schema/v0/schema.json is dirty. Please run 'make' and commit the changes"
            exit 1
          fi
          if ! git diff --exit-code schema/v1/schema.json; then
            echo "schema/v1/schema.json is dirty. Please run 'make' and commit the changes"
            exit 1
          fi
      - run: |
          go test -race -covermode=atomic -coverprofile=coverage.out -failfast -timeout 3m ./...
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - if: failure()
        run: |
          curl -H "Authorization: Bearer $GITHUB_TOKEN" https://api.github.com/rate_limit
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          go tool cover -func=coverage.out | sort -k3 -n
      - uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - run: |
          go test ./schema/v0 -run=^$ -fuzz=FuzzTaskNamePattern -fuzztime=5s
          go test ./schema/v0 -run=^$ -fuzz=FuzzEnvVariablePattern -fuzztime=5s
          go test ./schema/v1 -run=^$ -fuzz=FuzzTaskNamePattern -fuzztime=5s
          go test ./schema/v1 -run=^$ -fuzz=FuzzEnvVariablePattern -fuzztime=5s

  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: go.mod
          cache-dependency-path: go.sum
      - name: golangci-lint
        uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9 # v8.0.0
        with:
          version: latest
